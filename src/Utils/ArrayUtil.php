<?php  namespace Json\Validation\Utils;

/**
 * ArrayUtil
 */

class ArrayUtil
{
	private $buffer = [];

	/**
	 * turn delimited string into array, each of which is a substring of string formed by splitting it on boundaries formed by the string delimiter.
	 * this method will be used with conjunction with other methods like toArray() or last()
	 * 
	 * @param string $delimiter
	 * @param string $string
	 * 
	 * @return $this
	 */
	public function explode( $delimiter, $string )
	{
		$this->buffer = explode( $delimiter, $string );
		return $this;
	}

	/**
	 * return the array generated by the explode() method
	 * 
	 * @return array
	 */
	public function toArray()
	{
		return $this->buffer;
	}

	/**
	 * return the last item in the array
	 * 
	 * @return string
	 */

	public function last()
	{
		$lastItem = count( $this->buffer ) - 1;
		return $this->buffer[$lastItem];
	}

	/**
	 * finds whether the given variable is an array
	 * 
	 * @return bool
	 */
	public function isArray( $array )
	{
		return is_array( $array );
	}

	/**
	 * finds whether the given variable is an empty array
	 * 
	 * @return bool
	 */
	public function isEmpty( $array )
	{
		if( count( $array ) <= 0 )
		{
			return true;
		}

		return false;
	}
}